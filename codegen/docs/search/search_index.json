{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Apicurio Codegen","text":"<p>Welcome to Apicurio Codegen - an open source API design code generator that helps you generate high-quality code from OpenAPI specifications.</p>"},{"location":"#what-is-apicurio-codegen","title":"What is Apicurio Codegen?","text":"<p>Apicurio Codegen is a powerful tool that automatically generates code from OpenAPI (formerly Swagger) specifications. It specializes in generating:</p> <ul> <li>JAX-RS server stubs for Java applications</li> <li>Quarkus-optimized code with reactive and blocking variants</li> <li>Data models and DTOs from OpenAPI schemas</li> <li>Client libraries for consuming APIs</li> </ul>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>\ud83d\ude80 Quarkus Native - Optimized for Quarkus applications with native compilation support</li> <li>\ud83d\udcdd OpenAPI 3.x Support - Full support for modern OpenAPI specifications</li> <li>\u26a1 Multiple Integration Options - Maven plugin, CLI tool, or programmatic API</li> <li>\ud83d\udd27 Highly Configurable - Extensive customization options for generated code</li> <li>\ud83c\udfd7\ufe0f Production Ready - Battle-tested in enterprise environments</li> </ul>"},{"location":"#project-structure","title":"Project Structure","text":"<p>This project consists of several modules:</p> <ul> <li><code>core/</code> - Core code generation engine</li> <li><code>maven-plugin/</code> - Maven plugin for build integration</li> <li><code>cli/</code> - Command-line interface</li> <li><code>quarkus-extension/</code> - Quarkus extension for seamless integration</li> </ul>"},{"location":"#quick-links","title":"Quick Links","text":"<ul> <li>Getting Started - Jump right in with a simple example</li> <li>User Guide - Comprehensive documentation</li> <li>GitHub Repository - Source code and issues</li> <li>Apicurio Project - Main project website</li> </ul>"},{"location":"#license","title":"License","text":"<p>This project is licensed under the Apache License 2.0. See the LICENSE file for details.</p>"},{"location":"#community","title":"Community","text":"<ul> <li>Issues: Report bugs and request features on GitHub Issues</li> <li>Discussions: Join the conversation in our community forums</li> <li>Contributing: We welcome contributions! Check out our contribution guidelines</li> </ul> <p>Developed by Red Hat as part of the Apicurio project.</p>"},{"location":"getting-started/","title":"Getting Started","text":"<p>This guide will help you get up and running with Apicurio Codegen in just a few minutes.</p>"},{"location":"getting-started/#prerequisites","title":"Prerequisites","text":"<p>Before you begin, ensure you have:</p> <ul> <li>Java 11 or later installed</li> <li>Maven 3.6+ for building projects</li> <li>An OpenAPI specification (we'll provide a simple example)</li> </ul>"},{"location":"getting-started/#hello-world-example","title":"Hello World Example","text":"<p>Let's create a simple \"Hello World\" API and generate code from it.</p>"},{"location":"getting-started/#step-1-create-a-simple-openapi-specification","title":"Step 1: Create a Simple OpenAPI Specification","text":"<p>Create a file called <code>hello-api.yaml</code>:</p> <pre><code>openapi: 3.0.3\ninfo:\n  title: Hello World API\n  description: A simple Hello World API\n  version: 1.0.0\nservers:\n  - url: http://localhost:8080\n    description: Development server\npaths:\n  /hello:\n    get:\n      summary: Say hello\n      operationId: sayHello\n      parameters:\n        - name: name\n          in: query\n          required: false\n          schema:\n            type: string\n            default: \"World\"\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Greeting'\ncomponents:\n  schemas:\n    Greeting:\n      type: object\n      properties:\n        message:\n          type: string\n          example: \"Hello, World!\"\n        timestamp:\n          type: string\n          format: date-time\n      required:\n        - message\n        - timestamp\n</code></pre>"},{"location":"getting-started/#step-2-set-up-maven-project","title":"Step 2: Set Up Maven Project","text":"<p>Create a new Maven project with the following <code>pom.xml</code>:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0\n                           http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n    &lt;groupId&gt;com.example&lt;/groupId&gt;\n    &lt;artifactId&gt;hello-world-api&lt;/artifactId&gt;\n    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\n\n    &lt;properties&gt;\n        &lt;maven.compiler.source&gt;11&lt;/maven.compiler.source&gt;\n        &lt;maven.compiler.target&gt;11&lt;/maven.compiler.target&gt;\n        &lt;quarkus.platform.version&gt;3.2.8.Final&lt;/quarkus.platform.version&gt;\n        &lt;apicurio-codegen.version&gt;1.2.6.Final&lt;/apicurio-codegen.version&gt;\n    &lt;/properties&gt;\n\n    &lt;dependencyManagement&gt;\n        &lt;dependencies&gt;\n            &lt;dependency&gt;\n                &lt;groupId&gt;io.quarkus.platform&lt;/groupId&gt;\n                &lt;artifactId&gt;quarkus-bom&lt;/artifactId&gt;\n                &lt;version&gt;${quarkus.platform.version}&lt;/version&gt;\n                &lt;type&gt;pom&lt;/type&gt;\n                &lt;scope&gt;import&lt;/scope&gt;\n            &lt;/dependency&gt;\n        &lt;/dependencies&gt;\n    &lt;/dependencyManagement&gt;\n\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;io.quarkus&lt;/groupId&gt;\n            &lt;artifactId&gt;quarkus-resteasy-reactive-jackson&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n\n    &lt;build&gt;\n        &lt;plugins&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;io.apicurio&lt;/groupId&gt;\n                &lt;artifactId&gt;apicurio-codegen-maven-plugin&lt;/artifactId&gt;\n                &lt;version&gt;${apicurio-codegen.version}&lt;/version&gt;\n                &lt;executions&gt;\n                    &lt;execution&gt;\n                        &lt;goals&gt;\n                            &lt;goal&gt;generate&lt;/goal&gt;\n                        &lt;/goals&gt;\n                        &lt;configuration&gt;\n                            &lt;inputSpec&gt;hello-api.yaml&lt;/inputSpec&gt;\n                            &lt;output&gt;target/generated-sources/apicurio&lt;/output&gt;\n                            &lt;projectSettings&gt;\n                                &lt;javaPackage&gt;com.example.hello&lt;/javaPackage&gt;\n                            &lt;/projectSettings&gt;\n                        &lt;/configuration&gt;\n                    &lt;/execution&gt;\n                &lt;/executions&gt;\n            &lt;/plugin&gt;\n        &lt;/plugins&gt;\n    &lt;/build&gt;\n&lt;/project&gt;\n</code></pre>"},{"location":"getting-started/#step-3-generate-code","title":"Step 3: Generate Code","text":"<p>Run the code generation:</p> <pre><code>mvn clean generate-sources\n</code></pre> <p>This will generate:</p> <ul> <li>JAX-RS resource interfaces in <code>target/generated-sources/apicurio/</code></li> <li>Data model classes (<code>Greeting.java</code>)</li> <li>API interfaces ready for implementation</li> </ul>"},{"location":"getting-started/#step-4-implement-the-generated-interface","title":"Step 4: Implement the Generated Interface","text":"<p>Create <code>src/main/java/com/example/hello/HelloResource.java</code>:</p> <pre><code>package com.example.hello;\n\nimport java.time.OffsetDateTime;\nimport jakarta.enterprise.context.ApplicationScoped;\n\n@ApplicationScoped\npublic class HelloResource implements HelloApi {\n\n    @Override\n    public Greeting sayHello(String name) {\n        Greeting greeting = new Greeting();\n        greeting.setMessage(\"Hello, \" + (name != null ? name : \"World\") + \"!\");\n        greeting.setTimestamp(OffsetDateTime.now());\n        return greeting;\n    }\n}\n</code></pre>"},{"location":"getting-started/#step-5-run-your-application","title":"Step 5: Run Your Application","text":"<pre><code>mvn quarkus:dev\n</code></pre> <p>Your API is now running at <code>http://localhost:8080</code>!</p> <p>Test it: <pre><code>curl \"http://localhost:8080/hello?name=Developer\"\n</code></pre></p> <p>Response: <pre><code>{\n  \"message\": \"Hello, Developer!\",\n  \"timestamp\": \"2024-01-15T10:30:00Z\"\n}\n</code></pre></p>"},{"location":"getting-started/#whats-next","title":"What's Next?","text":"<p>Now that you have a working example, explore more advanced features:</p> <ul> <li>Configuration Options - Customize package names, add validation, etc.</li> <li>Multiple Output Formats - Generate clients, async APIs, and more</li> <li>Integration Patterns - Learn about different ways to integrate the generator</li> <li>Advanced OpenAPI Features - Work with complex schemas, security, and more</li> </ul> <p>Check out the User Guide for detailed documentation on all features.</p>"},{"location":"user-guide/","title":"User Guide","text":"<p>Welcome to the comprehensive user guide for Apicurio Codegen. This section provides detailed documentation for all features and capabilities.</p>"},{"location":"user-guide/#table-of-contents","title":"Table of Contents","text":""},{"location":"user-guide/#basic-usage","title":"Basic Usage","text":"<ul> <li>Installation &amp; Setup - Different ways to install and configure Apicurio Codegen</li> <li>Maven Plugin - Detailed Maven plugin configuration and usage</li> <li>CLI Usage - Command-line interface documentation</li> <li>Configuration Reference - Complete configuration options</li> </ul>"},{"location":"user-guide/#code-generation","title":"Code Generation","text":"<ul> <li>OpenAPI Support - Supported OpenAPI features and specifications</li> <li>Output Formats - Different types of code you can generate</li> <li>Customization - How to customize generated code</li> <li>Templates - Working with custom templates</li> </ul>"},{"location":"user-guide/#integration","title":"Integration","text":"<ul> <li>Quarkus Integration - Deep integration with Quarkus applications</li> <li>Build Integration - Integrating with various build systems</li> <li>CI/CD Pipelines - Using Apicurio Codegen in automated workflows</li> </ul>"},{"location":"user-guide/#advanced-topics","title":"Advanced Topics","text":"<ul> <li>Performance Tuning - Optimizing code generation for large APIs</li> <li>Troubleshooting - Common issues and solutions</li> <li>Contributing - How to contribute to the project</li> </ul> <p>This user guide is under active development. More sections will be added as the documentation evolves.</p>"},{"location":"user-guide/#quick-navigation","title":"Quick Navigation","text":"<ul> <li>\u2190 Back to Getting Started</li> <li>\u2190 Back to Home</li> <li>View on GitHub \u2192</li> </ul>"},{"location":"user-guide/#apicurio-codegen-openapi-extensions","title":"Apicurio Codegen OpenAPI Extensions","text":"<p>Apicurio Codegen uses OpenAPI specification extensions to allow customization of the generated source code based on your API contract.</p>"},{"location":"user-guide/#x-codegen","title":"<code>x-codegen</code>","text":"<p>The <code>x-codegen</code> extension can be defined at the root level of the OpenAPI document.  </p> <p>It is applied globally and allows you to customize the generated bean classes by: - Adding annotations to all generated beans. - Controlling date/time formatting. - Configuring the application context root.</p>"},{"location":"user-guide/#x-codegenbean-annotations","title":"<code>x-codegen.bean-annotations</code>","text":"<p>Adding annotations to generated bean classes:</p> <pre><code>{\n  \"x-codegen\": {\n    \"bean-annotations\": [\n      \"@lombok.ToString\", // (1)\n      {\n        \"annotation\": \"@lombok.EqualsAndHashCode\", // (2)\n        \"excludeEnums\": true\n      }\n    ]\n  }\n}\n</code></pre> <ol> <li>Adds the <code>@lombok.ToString</code> annotation to all generated bean classes.</li> <li>Adds the <code>@lombok.EqualsAndHashCode</code> annotation to all generated bean classes, except for Java enums (when excludeEnums is set to <code>true</code>).</li> </ol>"},{"location":"user-guide/#x-codegencontextroot","title":"<code>x-codegen.contextRoot</code>","text":"<p>Additionally, you can configure the application context root using the <code>x-codegen.contextRoot</code> property.  </p> <p>This property defines a base path that will be automatically prefixed to all generated JAX-RS resource classes.</p> <p>For example, if you set the context root to <code>/apis/studio/v1</code>, all generated resource paths will include this prefix.</p> <pre><code>{\n  \"x-codegen\": {\n    \"contextRoot\": \"/apis/studio/v1\",\n    \"bean-annotations\": []\n  }\n}\n</code></pre> <p>Corresponding JAX-RS code:</p> <pre><code>@Path(\"/apis/studio/v1/users\")\npublic class UserResource {}\n</code></pre> <p>Note</p> <p>You can use the <code>x-codegen-contextRoot</code> property to apply a context root prefix to a specific JAX-RS resource instead of using the global one.</p>"},{"location":"user-guide/#x-codegensuppress-date-time-formatting","title":"<code>x-codegen.suppress-date-time-formatting</code>","text":"<p>By default, Apicurio Codegen generates properties of type <code>string</code> with the format <code>date-time</code> as shown below:</p> <pre><code>@JsonFormat(shape = JsonFormat.Shape.STRING, pattern = \"yyyy-MM-dd'T'HH:mm:ss'Z'\", timezone = \"UTC\")\n@JsonProperty(\"shipDate\")\nprivate Date shipDate;\n</code></pre> <p>If you want to disable this behavior, you can use the <code>x-codegen.suppress-date-time-formatting</code> property to remove the <code>@JsonFormat</code> annotation from generated fields.</p> <pre><code>{\n  \"x-codegen\": {\n    \"suppress-date-time-formatting\": true\n  }\n}\n</code></pre>"}]}